import {
  __commonJS
} from "./chunk-V4OQ3NZ2.js";

// node_modules/sweetalert2/dist/sweetalert2.min.js
var require_sweetalert2_min = __commonJS({
  "node_modules/sweetalert2/dist/sweetalert2.min.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).Sweetalert2 = t();
    }(exports, function() {
      "use strict";
      function e(e2, t2, n2) {
        if ("function" == typeof e2 ? e2 === t2 : e2.has(t2)) return arguments.length < 3 ? t2 : n2;
        throw new TypeError("Private element is not present on this object");
      }
      function t(t2, n2) {
        return t2.get(e(t2, n2));
      }
      function n(e2, t2, n2) {
        (function(e3, t3) {
          if (t3.has(e3)) throw new TypeError("Cannot initialize the same private elements twice on an object");
        })(e2, t2), t2.set(e2, n2);
      }
      const o = {}, i = (e2) => new Promise((t2) => {
        if (!e2) return t2();
        const n2 = window.scrollX, i2 = window.scrollY;
        o.restoreFocusTimeout = setTimeout(() => {
          o.previousActiveElement instanceof HTMLElement ? (o.previousActiveElement.focus(), o.previousActiveElement = null) : document.body && document.body.focus(), t2();
        }, 100), window.scrollTo(n2, i2);
      }), s = "swal2-", r = ["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error", "draggable", "dragging"].reduce((e2, t2) => (e2[t2] = s + t2, e2), {}), a = ["success", "warning", "info", "question", "error"].reduce((e2, t2) => (e2[t2] = s + t2, e2), {}), l = "SweetAlert2:", c = (e2) => e2.charAt(0).toUpperCase() + e2.slice(1), u = (e2) => {
        console.warn(`${l} ${"object" == typeof e2 ? e2.join(" ") : e2}`);
      }, d = (e2) => {
        console.error(`${l} ${e2}`);
      }, p = [], m = function(e2) {
        let t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
        var n2;
        n2 = `"${e2}" is deprecated and will be removed in the next major release.${t2 ? ` Use "${t2}" instead.` : ""}`, p.includes(n2) || (p.push(n2), u(n2));
      }, g = (e2) => "function" == typeof e2 ? e2() : e2, h = (e2) => e2 && "function" == typeof e2.toPromise, f = (e2) => h(e2) ? e2.toPromise() : Promise.resolve(e2), b = (e2) => e2 && Promise.resolve(e2) === e2, y = () => document.body.querySelector(`.${r.container}`), v = (e2) => {
        const t2 = y();
        return t2 ? t2.querySelector(e2) : null;
      }, w = (e2) => v(`.${e2}`), C = () => w(r.popup), A = () => w(r.icon), E = () => w(r.title), k = () => w(r["html-container"]), B = () => w(r.image), L = () => w(r["progress-steps"]), $ = () => w(r["validation-message"]), x = () => v(`.${r.actions} .${r.confirm}`), P = () => v(`.${r.actions} .${r.cancel}`), T = () => v(`.${r.actions} .${r.deny}`), S = () => v(`.${r.loader}`), O = () => w(r.actions), M = () => w(r.footer), j = () => w(r["timer-progress-bar"]), H = () => w(r.close), I = () => {
        const e2 = C();
        if (!e2) return [];
        const t2 = e2.querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])'), n2 = Array.from(t2).sort((e3, t3) => {
          const n3 = parseInt(e3.getAttribute("tabindex") || "0"), o3 = parseInt(t3.getAttribute("tabindex") || "0");
          return n3 > o3 ? 1 : n3 < o3 ? -1 : 0;
        }), o2 = e2.querySelectorAll('\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n'), i2 = Array.from(o2).filter((e3) => "-1" !== e3.getAttribute("tabindex"));
        return [...new Set(n2.concat(i2))].filter((e3) => ee(e3));
      }, D = () => N(document.body, r.shown) && !N(document.body, r["toast-shown"]) && !N(document.body, r["no-backdrop"]), q = () => {
        const e2 = C();
        return !!e2 && N(e2, r.toast);
      }, V = (e2, t2) => {
        if (e2.textContent = "", t2) {
          const n2 = new DOMParser().parseFromString(t2, "text/html"), o2 = n2.querySelector("head");
          o2 && Array.from(o2.childNodes).forEach((t3) => {
            e2.appendChild(t3);
          });
          const i2 = n2.querySelector("body");
          i2 && Array.from(i2.childNodes).forEach((t3) => {
            t3 instanceof HTMLVideoElement || t3 instanceof HTMLAudioElement ? e2.appendChild(t3.cloneNode(true)) : e2.appendChild(t3);
          });
        }
      }, N = (e2, t2) => {
        if (!t2) return false;
        const n2 = t2.split(/\s+/);
        for (let t3 = 0; t3 < n2.length; t3++) if (!e2.classList.contains(n2[t3])) return false;
        return true;
      }, _ = (e2, t2, n2) => {
        if (((e3, t3) => {
          Array.from(e3.classList).forEach((n3) => {
            Object.values(r).includes(n3) || Object.values(a).includes(n3) || Object.values(t3.showClass || {}).includes(n3) || e3.classList.remove(n3);
          });
        })(e2, t2), !t2.customClass) return;
        const o2 = t2.customClass[n2];
        o2 && ("string" == typeof o2 || o2.forEach ? z(e2, o2) : u(`Invalid type of customClass.${n2}! Expected string or iterable object, got "${typeof o2}"`));
      }, F = (e2, t2) => {
        if (!t2) return null;
        switch (t2) {
          case "select":
          case "textarea":
          case "file":
            return e2.querySelector(`.${r.popup} > .${r[t2]}`);
          case "checkbox":
            return e2.querySelector(`.${r.popup} > .${r.checkbox} input`);
          case "radio":
            return e2.querySelector(`.${r.popup} > .${r.radio} input:checked`) || e2.querySelector(`.${r.popup} > .${r.radio} input:first-child`);
          case "range":
            return e2.querySelector(`.${r.popup} > .${r.range} input`);
          default:
            return e2.querySelector(`.${r.popup} > .${r.input}`);
        }
      }, R = (e2) => {
        if (e2.focus(), "file" !== e2.type) {
          const t2 = e2.value;
          e2.value = "", e2.value = t2;
        }
      }, U = (e2, t2, n2) => {
        e2 && t2 && ("string" == typeof t2 && (t2 = t2.split(/\s+/).filter(Boolean)), t2.forEach((t3) => {
          Array.isArray(e2) ? e2.forEach((e3) => {
            n2 ? e3.classList.add(t3) : e3.classList.remove(t3);
          }) : n2 ? e2.classList.add(t3) : e2.classList.remove(t3);
        }));
      }, z = (e2, t2) => {
        U(e2, t2, true);
      }, W = (e2, t2) => {
        U(e2, t2, false);
      }, K = (e2, t2) => {
        const n2 = Array.from(e2.children);
        for (let e3 = 0; e3 < n2.length; e3++) {
          const o2 = n2[e3];
          if (o2 instanceof HTMLElement && N(o2, t2)) return o2;
        }
      }, Y = (e2, t2, n2) => {
        n2 === `${parseInt(n2)}` && (n2 = parseInt(n2)), n2 || 0 === parseInt(n2) ? e2.style.setProperty(t2, "number" == typeof n2 ? `${n2}px` : n2) : e2.style.removeProperty(t2);
      }, X = function(e2) {
        let t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "flex";
        e2 && (e2.style.display = t2);
      }, Z = (e2) => {
        e2 && (e2.style.display = "none");
      }, J = function(e2) {
        let t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "block";
        e2 && new MutationObserver(() => {
          Q(e2, e2.innerHTML, t2);
        }).observe(e2, { childList: true, subtree: true });
      }, G = (e2, t2, n2, o2) => {
        const i2 = e2.querySelector(t2);
        i2 && i2.style.setProperty(n2, o2);
      }, Q = function(e2, t2) {
        t2 ? X(e2, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "flex") : Z(e2);
      }, ee = (e2) => !(!e2 || !(e2.offsetWidth || e2.offsetHeight || e2.getClientRects().length)), te = (e2) => !!(e2.scrollHeight > e2.clientHeight), ne = (e2) => {
        const t2 = window.getComputedStyle(e2), n2 = parseFloat(t2.getPropertyValue("animation-duration") || "0"), o2 = parseFloat(t2.getPropertyValue("transition-duration") || "0");
        return n2 > 0 || o2 > 0;
      }, oe = function(e2) {
        let t2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        const n2 = j();
        n2 && ee(n2) && (t2 && (n2.style.transition = "none", n2.style.width = "100%"), setTimeout(() => {
          n2.style.transition = `width ${e2 / 1e3}s linear`, n2.style.width = "0%";
        }, 10));
      }, ie = `
 <div aria-labelledby="${r.title}" aria-describedby="${r["html-container"]}" class="${r.popup}" tabindex="-1">
   <button type="button" class="${r.close}"></button>
   <ul class="${r["progress-steps"]}"></ul>
   <div class="${r.icon}"></div>
   <img class="${r.image}" />
   <h2 class="${r.title}" id="${r.title}"></h2>
   <div class="${r["html-container"]}" id="${r["html-container"]}"></div>
   <input class="${r.input}" id="${r.input}" />
   <input type="file" class="${r.file}" />
   <div class="${r.range}">
     <input type="range" />
     <output></output>
   </div>
   <select class="${r.select}" id="${r.select}"></select>
   <div class="${r.radio}"></div>
   <label class="${r.checkbox}">
     <input type="checkbox" id="${r.checkbox}" />
     <span class="${r.label}"></span>
   </label>
   <textarea class="${r.textarea}" id="${r.textarea}"></textarea>
   <div class="${r["validation-message"]}" id="${r["validation-message"]}"></div>
   <div class="${r.actions}">
     <div class="${r.loader}"></div>
     <button type="button" class="${r.confirm}"></button>
     <button type="button" class="${r.deny}"></button>
     <button type="button" class="${r.cancel}"></button>
   </div>
   <div class="${r.footer}"></div>
   <div class="${r["timer-progress-bar-container"]}">
     <div class="${r["timer-progress-bar"]}"></div>
   </div>
 </div>
`.replace(/(^|\n)\s*/g, ""), se = () => {
        o.currentInstance.resetValidationMessage();
      }, re = (e2) => {
        const t2 = (() => {
          const e3 = y();
          return !!e3 && (e3.remove(), W([document.documentElement, document.body], [r["no-backdrop"], r["toast-shown"], r["has-column"]]), true);
        })();
        if ("undefined" == typeof window || "undefined" == typeof document) return void d("SweetAlert2 requires document to initialize");
        const n2 = document.createElement("div");
        n2.className = r.container, t2 && z(n2, r["no-transition"]), V(n2, ie);
        const o2 = "string" == typeof (i2 = e2.target) ? document.querySelector(i2) : i2;
        var i2;
        o2.appendChild(n2), ((e3) => {
          const t3 = C();
          t3.setAttribute("role", e3.toast ? "alert" : "dialog"), t3.setAttribute("aria-live", e3.toast ? "polite" : "assertive"), e3.toast || t3.setAttribute("aria-modal", "true");
        })(e2), ((e3) => {
          "rtl" === window.getComputedStyle(e3).direction && z(y(), r.rtl);
        })(o2), (() => {
          const e3 = C(), t3 = K(e3, r.input), n3 = K(e3, r.file), o3 = e3.querySelector(`.${r.range} input`), i3 = e3.querySelector(`.${r.range} output`), s2 = K(e3, r.select), a2 = e3.querySelector(`.${r.checkbox} input`), l2 = K(e3, r.textarea);
          t3.oninput = se, n3.onchange = se, s2.onchange = se, a2.onchange = se, l2.oninput = se, o3.oninput = () => {
            se(), i3.value = o3.value;
          }, o3.onchange = () => {
            se(), i3.value = o3.value;
          };
        })();
      }, ae = (e2, t2) => {
        e2 instanceof HTMLElement ? t2.appendChild(e2) : "object" == typeof e2 ? le(e2, t2) : e2 && V(t2, e2);
      }, le = (e2, t2) => {
        e2.jquery ? ce(t2, e2) : V(t2, e2.toString());
      }, ce = (e2, t2) => {
        if (e2.textContent = "", 0 in t2) for (let n2 = 0; n2 in t2; n2++) e2.appendChild(t2[n2].cloneNode(true));
        else e2.appendChild(t2.cloneNode(true));
      }, ue = (e2, t2) => {
        const n2 = O(), o2 = S();
        n2 && o2 && (t2.showConfirmButton || t2.showDenyButton || t2.showCancelButton ? X(n2) : Z(n2), _(n2, t2, "actions"), function(e3, t3, n3) {
          const o3 = x(), i2 = T(), s2 = P();
          if (!o3 || !i2 || !s2) return;
          de(o3, "confirm", n3), de(i2, "deny", n3), de(s2, "cancel", n3), function(e4, t4, n4, o4) {
            if (!o4.buttonsStyling) return void W([e4, t4, n4], r.styled);
            z([e4, t4, n4], r.styled), o4.confirmButtonColor && (e4.style.backgroundColor = o4.confirmButtonColor, z(e4, r["default-outline"]));
            o4.denyButtonColor && (t4.style.backgroundColor = o4.denyButtonColor, z(t4, r["default-outline"]));
            o4.cancelButtonColor && (n4.style.backgroundColor = o4.cancelButtonColor, z(n4, r["default-outline"]));
          }(o3, i2, s2, n3), n3.reverseButtons && (n3.toast ? (e3.insertBefore(s2, o3), e3.insertBefore(i2, o3)) : (e3.insertBefore(s2, t3), e3.insertBefore(i2, t3), e3.insertBefore(o3, t3)));
        }(n2, o2, t2), V(o2, t2.loaderHtml || ""), _(o2, t2, "loader"));
      };
      function de(e2, t2, n2) {
        const o2 = c(t2);
        Q(e2, n2[`show${o2}Button`], "inline-block"), V(e2, n2[`${t2}ButtonText`] || ""), e2.setAttribute("aria-label", n2[`${t2}ButtonAriaLabel`] || ""), e2.className = r[t2], _(e2, n2, `${t2}Button`);
      }
      const pe = (e2, t2) => {
        const n2 = y();
        n2 && (!function(e3, t3) {
          "string" == typeof t3 ? e3.style.background = t3 : t3 || z([document.documentElement, document.body], r["no-backdrop"]);
        }(n2, t2.backdrop), function(e3, t3) {
          if (!t3) return;
          t3 in r ? z(e3, r[t3]) : (u('The "position" parameter is not valid, defaulting to "center"'), z(e3, r.center));
        }(n2, t2.position), function(e3, t3) {
          if (!t3) return;
          z(e3, r[`grow-${t3}`]);
        }(n2, t2.grow), _(n2, t2, "container"));
      };
      var me = { innerParams: /* @__PURE__ */ new WeakMap(), domCache: /* @__PURE__ */ new WeakMap() };
      const ge = ["input", "file", "range", "select", "radio", "checkbox", "textarea"], he = (e2) => {
        if (!e2.input) return;
        if (!Ae[e2.input]) return void d(`Unexpected type of input! Expected ${Object.keys(Ae).join(" | ")}, got "${e2.input}"`);
        const t2 = we(e2.input);
        if (!t2) return;
        const n2 = Ae[e2.input](t2, e2);
        X(t2), e2.inputAutoFocus && setTimeout(() => {
          R(n2);
        });
      }, fe = (e2, t2) => {
        const n2 = C();
        if (!n2) return;
        const o2 = F(n2, e2);
        if (o2) {
          ((e3) => {
            for (let t3 = 0; t3 < e3.attributes.length; t3++) {
              const n3 = e3.attributes[t3].name;
              ["id", "type", "value", "style"].includes(n3) || e3.removeAttribute(n3);
            }
          })(o2);
          for (const e3 in t2) o2.setAttribute(e3, t2[e3]);
        }
      }, be = (e2) => {
        if (!e2.input) return;
        const t2 = we(e2.input);
        t2 && _(t2, e2, "input");
      }, ye = (e2, t2) => {
        !e2.placeholder && t2.inputPlaceholder && (e2.placeholder = t2.inputPlaceholder);
      }, ve = (e2, t2, n2) => {
        if (n2.inputLabel) {
          const o2 = document.createElement("label"), i2 = r["input-label"];
          o2.setAttribute("for", e2.id), o2.className = i2, "object" == typeof n2.customClass && z(o2, n2.customClass.inputLabel), o2.innerText = n2.inputLabel, t2.insertAdjacentElement("beforebegin", o2);
        }
      }, we = (e2) => {
        const t2 = C();
        if (t2) return K(t2, r[e2] || r.input);
      }, Ce = (e2, t2) => {
        ["string", "number"].includes(typeof t2) ? e2.value = `${t2}` : b(t2) || u(`Unexpected type of inputValue! Expected "string", "number" or "Promise", got "${typeof t2}"`);
      }, Ae = {};
      Ae.text = Ae.email = Ae.password = Ae.number = Ae.tel = Ae.url = Ae.search = Ae.date = Ae["datetime-local"] = Ae.time = Ae.week = Ae.month = (e2, t2) => (Ce(e2, t2.inputValue), ve(e2, e2, t2), ye(e2, t2), e2.type = t2.input, e2), Ae.file = (e2, t2) => (ve(e2, e2, t2), ye(e2, t2), e2), Ae.range = (e2, t2) => {
        const n2 = e2.querySelector("input"), o2 = e2.querySelector("output");
        return Ce(n2, t2.inputValue), n2.type = t2.input, Ce(o2, t2.inputValue), ve(n2, e2, t2), e2;
      }, Ae.select = (e2, t2) => {
        if (e2.textContent = "", t2.inputPlaceholder) {
          const n2 = document.createElement("option");
          V(n2, t2.inputPlaceholder), n2.value = "", n2.disabled = true, n2.selected = true, e2.appendChild(n2);
        }
        return ve(e2, e2, t2), e2;
      }, Ae.radio = (e2) => (e2.textContent = "", e2), Ae.checkbox = (e2, t2) => {
        const n2 = F(C(), "checkbox");
        n2.value = "1", n2.checked = Boolean(t2.inputValue);
        const o2 = e2.querySelector("span");
        return V(o2, t2.inputPlaceholder || t2.inputLabel), n2;
      }, Ae.textarea = (e2, t2) => {
        Ce(e2, t2.inputValue), ye(e2, t2), ve(e2, e2, t2);
        return setTimeout(() => {
          if ("MutationObserver" in window) {
            const n2 = parseInt(window.getComputedStyle(C()).width);
            new MutationObserver(() => {
              if (!document.body.contains(e2)) return;
              const o2 = e2.offsetWidth + (i2 = e2, parseInt(window.getComputedStyle(i2).marginLeft) + parseInt(window.getComputedStyle(i2).marginRight));
              var i2;
              o2 > n2 ? C().style.width = `${o2}px` : Y(C(), "width", t2.width);
            }).observe(e2, { attributes: true, attributeFilter: ["style"] });
          }
        }), e2;
      };
      const Ee = (e2, t2) => {
        const n2 = k();
        n2 && (J(n2), _(n2, t2, "htmlContainer"), t2.html ? (ae(t2.html, n2), X(n2, "block")) : t2.text ? (n2.textContent = t2.text, X(n2, "block")) : Z(n2), ((e3, t3) => {
          const n3 = C();
          if (!n3) return;
          const o2 = me.innerParams.get(e3), i2 = !o2 || t3.input !== o2.input;
          ge.forEach((e4) => {
            const o3 = K(n3, r[e4]);
            o3 && (fe(e4, t3.inputAttributes), o3.className = r[e4], i2 && Z(o3));
          }), t3.input && (i2 && he(t3), be(t3));
        })(e2, t2));
      }, ke = (e2, t2) => {
        for (const [n2, o2] of Object.entries(a)) t2.icon !== n2 && W(e2, o2);
        z(e2, t2.icon && a[t2.icon]), $e(e2, t2), Be(), _(e2, t2, "icon");
      }, Be = () => {
        const e2 = C();
        if (!e2) return;
        const t2 = window.getComputedStyle(e2).getPropertyValue("background-color"), n2 = e2.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix");
        for (let e3 = 0; e3 < n2.length; e3++) n2[e3].style.backgroundColor = t2;
      }, Le = (e2, t2) => {
        if (!t2.icon && !t2.iconHtml) return;
        let n2 = e2.innerHTML, o2 = "";
        if (t2.iconHtml) o2 = xe(t2.iconHtml);
        else if ("success" === t2.icon) o2 = '\n  <div class="swal2-success-circular-line-left"></div>\n  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n  <div class="swal2-success-circular-line-right"></div>\n', n2 = n2.replace(/ style=".*?"/g, "");
        else if ("error" === t2.icon) o2 = '\n  <span class="swal2-x-mark">\n    <span class="swal2-x-mark-line-left"></span>\n    <span class="swal2-x-mark-line-right"></span>\n  </span>\n';
        else if (t2.icon) {
          o2 = xe({ question: "?", warning: "!", info: "i" }[t2.icon]);
        }
        n2.trim() !== o2.trim() && V(e2, o2);
      }, $e = (e2, t2) => {
        if (t2.iconColor) {
          e2.style.color = t2.iconColor, e2.style.borderColor = t2.iconColor;
          for (const n2 of [".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"]) G(e2, n2, "background-color", t2.iconColor);
          G(e2, ".swal2-success-ring", "border-color", t2.iconColor);
        }
      }, xe = (e2) => `<div class="${r["icon-content"]}">${e2}</div>`;
      let Pe = false, Te = 0, Se = 0, Oe = 0, Me = 0;
      const je = (e2) => {
        const t2 = C();
        if (e2.target === t2 || A().contains(e2.target)) {
          Pe = true;
          const n2 = De(e2);
          Te = n2.clientX, Se = n2.clientY, Oe = parseInt(t2.style.insetInlineStart) || 0, Me = parseInt(t2.style.insetBlockStart) || 0, z(t2, "swal2-dragging");
        }
      }, He = (e2) => {
        const t2 = C();
        if (Pe) {
          let { clientX: n2, clientY: o2 } = De(e2);
          t2.style.insetInlineStart = `${Oe + (n2 - Te)}px`, t2.style.insetBlockStart = `${Me + (o2 - Se)}px`;
        }
      }, Ie = () => {
        const e2 = C();
        Pe = false, W(e2, "swal2-dragging");
      }, De = (e2) => {
        let t2 = 0, n2 = 0;
        return e2.type.startsWith("mouse") ? (t2 = e2.clientX, n2 = e2.clientY) : e2.type.startsWith("touch") && (t2 = e2.touches[0].clientX, n2 = e2.touches[0].clientY), { clientX: t2, clientY: n2 };
      }, qe = (e2, t2) => {
        const n2 = y(), o2 = C();
        if (n2 && o2) {
          if (t2.toast) {
            Y(n2, "width", t2.width), o2.style.width = "100%";
            const e3 = S();
            e3 && o2.insertBefore(e3, A());
          } else Y(o2, "width", t2.width);
          Y(o2, "padding", t2.padding), t2.color && (o2.style.color = t2.color), t2.background && (o2.style.background = t2.background), Z($()), Ve(o2, t2), t2.draggable && !t2.toast ? (z(o2, r.draggable), ((e3) => {
            e3.addEventListener("mousedown", je), document.body.addEventListener("mousemove", He), e3.addEventListener("mouseup", Ie), e3.addEventListener("touchstart", je), document.body.addEventListener("touchmove", He), e3.addEventListener("touchend", Ie);
          })(o2)) : (W(o2, r.draggable), ((e3) => {
            e3.removeEventListener("mousedown", je), document.body.removeEventListener("mousemove", He), e3.removeEventListener("mouseup", Ie), e3.removeEventListener("touchstart", je), document.body.removeEventListener("touchmove", He), e3.removeEventListener("touchend", Ie);
          })(o2));
        }
      }, Ve = (e2, t2) => {
        const n2 = t2.showClass || {};
        e2.className = `${r.popup} ${ee(e2) ? n2.popup : ""}`, t2.toast ? (z([document.documentElement, document.body], r["toast-shown"]), z(e2, r.toast)) : z(e2, r.modal), _(e2, t2, "popup"), "string" == typeof t2.customClass && z(e2, t2.customClass), t2.icon && z(e2, r[`icon-${t2.icon}`]);
      }, Ne = (e2) => {
        const t2 = document.createElement("li");
        return z(t2, r["progress-step"]), V(t2, e2), t2;
      }, _e = (e2) => {
        const t2 = document.createElement("li");
        return z(t2, r["progress-step-line"]), e2.progressStepsDistance && Y(t2, "width", e2.progressStepsDistance), t2;
      }, Fe = (e2, t2) => {
        qe(0, t2), pe(0, t2), ((e3, t3) => {
          const n3 = L();
          if (!n3) return;
          const { progressSteps: o2, currentProgressStep: i2 } = t3;
          o2 && 0 !== o2.length && void 0 !== i2 ? (X(n3), n3.textContent = "", i2 >= o2.length && u("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), o2.forEach((e4, s2) => {
            const a2 = Ne(e4);
            if (n3.appendChild(a2), s2 === i2 && z(a2, r["active-progress-step"]), s2 !== o2.length - 1) {
              const e5 = _e(t3);
              n3.appendChild(e5);
            }
          })) : Z(n3);
        })(0, t2), ((e3, t3) => {
          const n3 = me.innerParams.get(e3), o2 = A();
          if (o2) {
            if (n3 && t3.icon === n3.icon) return Le(o2, t3), void ke(o2, t3);
            if (t3.icon || t3.iconHtml) {
              if (t3.icon && -1 === Object.keys(a).indexOf(t3.icon)) return d(`Unknown icon! Expected "success", "error", "warning", "info" or "question", got "${t3.icon}"`), void Z(o2);
              X(o2), Le(o2, t3), ke(o2, t3), z(o2, t3.showClass && t3.showClass.icon);
            } else Z(o2);
          }
        })(e2, t2), ((e3, t3) => {
          const n3 = B();
          n3 && (t3.imageUrl ? (X(n3, ""), n3.setAttribute("src", t3.imageUrl), n3.setAttribute("alt", t3.imageAlt || ""), Y(n3, "width", t3.imageWidth), Y(n3, "height", t3.imageHeight), n3.className = r.image, _(n3, t3, "image")) : Z(n3));
        })(0, t2), ((e3, t3) => {
          const n3 = E();
          n3 && (J(n3), Q(n3, t3.title || t3.titleText, "block"), t3.title && ae(t3.title, n3), t3.titleText && (n3.innerText = t3.titleText), _(n3, t3, "title"));
        })(0, t2), ((e3, t3) => {
          const n3 = H();
          n3 && (V(n3, t3.closeButtonHtml || ""), _(n3, t3, "closeButton"), Q(n3, t3.showCloseButton), n3.setAttribute("aria-label", t3.closeButtonAriaLabel || ""));
        })(0, t2), Ee(e2, t2), ue(0, t2), ((e3, t3) => {
          const n3 = M();
          n3 && (J(n3), Q(n3, t3.footer, "block"), t3.footer && ae(t3.footer, n3), _(n3, t3, "footer"));
        })(0, t2);
        const n2 = C();
        "function" == typeof t2.didRender && n2 && t2.didRender(n2), o.eventEmitter.emit("didRender", n2);
      }, Re = () => {
        var e2;
        return null === (e2 = x()) || void 0 === e2 ? void 0 : e2.click();
      }, Ue = Object.freeze({ cancel: "cancel", backdrop: "backdrop", close: "close", esc: "esc", timer: "timer" }), ze = (e2) => {
        e2.keydownTarget && e2.keydownHandlerAdded && (e2.keydownTarget.removeEventListener("keydown", e2.keydownHandler, { capture: e2.keydownListenerCapture }), e2.keydownHandlerAdded = false);
      }, We = (e2, t2) => {
        var n2;
        const o2 = I();
        if (o2.length) return (e2 += t2) === o2.length ? e2 = 0 : -1 === e2 && (e2 = o2.length - 1), void o2[e2].focus();
        null === (n2 = C()) || void 0 === n2 || n2.focus();
      }, Ke = ["ArrowRight", "ArrowDown"], Ye = ["ArrowLeft", "ArrowUp"], Xe = (e2, t2, n2) => {
        e2 && (t2.isComposing || 229 === t2.keyCode || (e2.stopKeydownPropagation && t2.stopPropagation(), "Enter" === t2.key ? Ze(t2, e2) : "Tab" === t2.key ? Je(t2) : [...Ke, ...Ye].includes(t2.key) ? Ge(t2.key) : "Escape" === t2.key && Qe(t2, e2, n2)));
      }, Ze = (e2, t2) => {
        if (!g(t2.allowEnterKey)) return;
        const n2 = F(C(), t2.input);
        if (e2.target && n2 && e2.target instanceof HTMLElement && e2.target.outerHTML === n2.outerHTML) {
          if (["textarea", "file"].includes(t2.input)) return;
          Re(), e2.preventDefault();
        }
      }, Je = (e2) => {
        const t2 = e2.target, n2 = I();
        let o2 = -1;
        for (let e3 = 0; e3 < n2.length; e3++) if (t2 === n2[e3]) {
          o2 = e3;
          break;
        }
        e2.shiftKey ? We(o2, -1) : We(o2, 1), e2.stopPropagation(), e2.preventDefault();
      }, Ge = (e2) => {
        const t2 = O(), n2 = x(), o2 = T(), i2 = P();
        if (!(t2 && n2 && o2 && i2)) return;
        const s2 = [n2, o2, i2];
        if (document.activeElement instanceof HTMLElement && !s2.includes(document.activeElement)) return;
        const r2 = Ke.includes(e2) ? "nextElementSibling" : "previousElementSibling";
        let a2 = document.activeElement;
        if (a2) {
          for (let e3 = 0; e3 < t2.children.length; e3++) {
            if (a2 = a2[r2], !a2) return;
            if (a2 instanceof HTMLButtonElement && ee(a2)) break;
          }
          a2 instanceof HTMLButtonElement && a2.focus();
        }
      }, Qe = (e2, t2, n2) => {
        g(t2.allowEscapeKey) && (e2.preventDefault(), n2(Ue.esc));
      };
      var et = { swalPromiseResolve: /* @__PURE__ */ new WeakMap(), swalPromiseReject: /* @__PURE__ */ new WeakMap() };
      const tt = () => {
        Array.from(document.body.children).forEach((e2) => {
          e2.hasAttribute("data-previous-aria-hidden") ? (e2.setAttribute("aria-hidden", e2.getAttribute("data-previous-aria-hidden") || ""), e2.removeAttribute("data-previous-aria-hidden")) : e2.removeAttribute("aria-hidden");
        });
      }, nt = "undefined" != typeof window && !!window.GestureEvent, ot = () => {
        const e2 = y();
        if (!e2) return;
        let t2;
        e2.ontouchstart = (e3) => {
          t2 = it(e3);
        }, e2.ontouchmove = (e3) => {
          t2 && (e3.preventDefault(), e3.stopPropagation());
        };
      }, it = (e2) => {
        const t2 = e2.target, n2 = y(), o2 = k();
        return !(!n2 || !o2) && (!st(e2) && !rt(e2) && (t2 === n2 || !te(n2) && t2 instanceof HTMLElement && "INPUT" !== t2.tagName && "TEXTAREA" !== t2.tagName && (!te(o2) || !o2.contains(t2))));
      }, st = (e2) => e2.touches && e2.touches.length && "stylus" === e2.touches[0].touchType, rt = (e2) => e2.touches && e2.touches.length > 1;
      let at = null;
      const lt = (e2) => {
        null === at && (document.body.scrollHeight > window.innerHeight || "scroll" === e2) && (at = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = `${at + (() => {
          const e3 = document.createElement("div");
          e3.className = r["scrollbar-measure"], document.body.appendChild(e3);
          const t2 = e3.getBoundingClientRect().width - e3.clientWidth;
          return document.body.removeChild(e3), t2;
        })()}px`);
      };
      function ct(e2, t2, n2, s2) {
        q() ? bt(e2, s2) : (i(n2).then(() => bt(e2, s2)), ze(o)), nt ? (t2.setAttribute("style", "display:none !important"), t2.removeAttribute("class"), t2.innerHTML = "") : t2.remove(), D() && (null !== at && (document.body.style.paddingRight = `${at}px`, at = null), (() => {
          if (N(document.body, r.iosfix)) {
            const e3 = parseInt(document.body.style.top, 10);
            W(document.body, r.iosfix), document.body.style.top = "", document.body.scrollTop = -1 * e3;
          }
        })(), tt()), W([document.documentElement, document.body], [r.shown, r["height-auto"], r["no-backdrop"], r["toast-shown"]]);
      }
      function ut(e2) {
        e2 = gt(e2);
        const t2 = et.swalPromiseResolve.get(this), n2 = dt(this);
        this.isAwaitingPromise ? e2.isDismissed || (mt(this), t2(e2)) : n2 && t2(e2);
      }
      const dt = (e2) => {
        const t2 = C();
        if (!t2) return false;
        const n2 = me.innerParams.get(e2);
        if (!n2 || N(t2, n2.hideClass.popup)) return false;
        W(t2, n2.showClass.popup), z(t2, n2.hideClass.popup);
        const o2 = y();
        return W(o2, n2.showClass.backdrop), z(o2, n2.hideClass.backdrop), ht(e2, t2, n2), true;
      };
      function pt(e2) {
        const t2 = et.swalPromiseReject.get(this);
        mt(this), t2 && t2(e2);
      }
      const mt = (e2) => {
        e2.isAwaitingPromise && (delete e2.isAwaitingPromise, me.innerParams.get(e2) || e2._destroy());
      }, gt = (e2) => void 0 === e2 ? { isConfirmed: false, isDenied: false, isDismissed: true } : Object.assign({ isConfirmed: false, isDenied: false, isDismissed: false }, e2), ht = (e2, t2, n2) => {
        var i2;
        const s2 = y(), r2 = ne(t2);
        "function" == typeof n2.willClose && n2.willClose(t2), null === (i2 = o.eventEmitter) || void 0 === i2 || i2.emit("willClose", t2), r2 ? ft(e2, t2, s2, n2.returnFocus, n2.didClose) : ct(e2, s2, n2.returnFocus, n2.didClose);
      }, ft = (e2, t2, n2, i2, s2) => {
        o.swalCloseEventFinishedCallback = ct.bind(null, e2, n2, i2, s2);
        const r2 = function(e3) {
          var n3;
          e3.target === t2 && (null === (n3 = o.swalCloseEventFinishedCallback) || void 0 === n3 || n3.call(o), delete o.swalCloseEventFinishedCallback, t2.removeEventListener("animationend", r2), t2.removeEventListener("transitionend", r2));
        };
        t2.addEventListener("animationend", r2), t2.addEventListener("transitionend", r2);
      }, bt = (e2, t2) => {
        setTimeout(() => {
          var n2;
          "function" == typeof t2 && t2.bind(e2.params)(), null === (n2 = o.eventEmitter) || void 0 === n2 || n2.emit("didClose"), e2._destroy && e2._destroy();
        });
      }, yt = (e2) => {
        let t2 = C();
        if (t2 || new Jn(), t2 = C(), !t2) return;
        const n2 = S();
        q() ? Z(A()) : vt(t2, e2), X(n2), t2.setAttribute("data-loading", "true"), t2.setAttribute("aria-busy", "true"), t2.focus();
      }, vt = (e2, t2) => {
        const n2 = O(), o2 = S();
        n2 && o2 && (!t2 && ee(x()) && (t2 = x()), X(n2), t2 && (Z(t2), o2.setAttribute("data-button-to-replace", t2.className), n2.insertBefore(o2, t2)), z([e2, n2], r.loading));
      }, wt = (e2) => e2.checked ? 1 : 0, Ct = (e2) => e2.checked ? e2.value : null, At = (e2) => e2.files && e2.files.length ? null !== e2.getAttribute("multiple") ? e2.files : e2.files[0] : null, Et = (e2, t2) => {
        const n2 = C();
        if (!n2) return;
        const o2 = (e3) => {
          "select" === t2.input ? function(e4, t3, n3) {
            const o3 = K(e4, r.select);
            if (!o3) return;
            const i2 = (e5, t4, o4) => {
              const i3 = document.createElement("option");
              i3.value = o4, V(i3, t4), i3.selected = Lt(o4, n3.inputValue), e5.appendChild(i3);
            };
            t3.forEach((e5) => {
              const t4 = e5[0], n4 = e5[1];
              if (Array.isArray(n4)) {
                const e6 = document.createElement("optgroup");
                e6.label = t4, e6.disabled = false, o3.appendChild(e6), n4.forEach((t5) => i2(e6, t5[1], t5[0]));
              } else i2(o3, n4, t4);
            }), o3.focus();
          }(n2, Bt(e3), t2) : "radio" === t2.input && function(e4, t3, n3) {
            const o3 = K(e4, r.radio);
            if (!o3) return;
            t3.forEach((e5) => {
              const t4 = e5[0], i3 = e5[1], s2 = document.createElement("input"), a2 = document.createElement("label");
              s2.type = "radio", s2.name = r.radio, s2.value = t4, Lt(t4, n3.inputValue) && (s2.checked = true);
              const l2 = document.createElement("span");
              V(l2, i3), l2.className = r.label, a2.appendChild(s2), a2.appendChild(l2), o3.appendChild(a2);
            });
            const i2 = o3.querySelectorAll("input");
            i2.length && i2[0].focus();
          }(n2, Bt(e3), t2);
        };
        h(t2.inputOptions) || b(t2.inputOptions) ? (yt(x()), f(t2.inputOptions).then((t3) => {
          e2.hideLoading(), o2(t3);
        })) : "object" == typeof t2.inputOptions ? o2(t2.inputOptions) : d("Unexpected type of inputOptions! Expected object, Map or Promise, got " + typeof t2.inputOptions);
      }, kt = (e2, t2) => {
        const n2 = e2.getInput();
        n2 && (Z(n2), f(t2.inputValue).then((o2) => {
          n2.value = "number" === t2.input ? `${parseFloat(o2) || 0}` : `${o2}`, X(n2), n2.focus(), e2.hideLoading();
        }).catch((t3) => {
          d(`Error in inputValue promise: ${t3}`), n2.value = "", X(n2), n2.focus(), e2.hideLoading();
        }));
      };
      const Bt = (e2) => {
        const t2 = [];
        return e2 instanceof Map ? e2.forEach((e3, n2) => {
          let o2 = e3;
          "object" == typeof o2 && (o2 = Bt(o2)), t2.push([n2, o2]);
        }) : Object.keys(e2).forEach((n2) => {
          let o2 = e2[n2];
          "object" == typeof o2 && (o2 = Bt(o2)), t2.push([n2, o2]);
        }), t2;
      }, Lt = (e2, t2) => !!t2 && t2.toString() === e2.toString(), $t = (e2, t2) => {
        const n2 = me.innerParams.get(e2);
        if (!n2.input) return void d(`The "input" parameter is needed to be set when using returnInputValueOn${c(t2)}`);
        const o2 = e2.getInput(), i2 = ((e3, t3) => {
          const n3 = e3.getInput();
          if (!n3) return null;
          switch (t3.input) {
            case "checkbox":
              return wt(n3);
            case "radio":
              return Ct(n3);
            case "file":
              return At(n3);
            default:
              return t3.inputAutoTrim ? n3.value.trim() : n3.value;
          }
        })(e2, n2);
        n2.inputValidator ? xt(e2, i2, t2) : o2 && !o2.checkValidity() ? (e2.enableButtons(), e2.showValidationMessage(n2.validationMessage || o2.validationMessage)) : "deny" === t2 ? Pt(e2, i2) : Ot(e2, i2);
      }, xt = (e2, t2, n2) => {
        const o2 = me.innerParams.get(e2);
        e2.disableInput();
        Promise.resolve().then(() => f(o2.inputValidator(t2, o2.validationMessage))).then((o3) => {
          e2.enableButtons(), e2.enableInput(), o3 ? e2.showValidationMessage(o3) : "deny" === n2 ? Pt(e2, t2) : Ot(e2, t2);
        });
      }, Pt = (e2, t2) => {
        const n2 = me.innerParams.get(e2 || void 0);
        if (n2.showLoaderOnDeny && yt(T()), n2.preDeny) {
          e2.isAwaitingPromise = true;
          Promise.resolve().then(() => f(n2.preDeny(t2, n2.validationMessage))).then((n3) => {
            false === n3 ? (e2.hideLoading(), mt(e2)) : e2.close({ isDenied: true, value: void 0 === n3 ? t2 : n3 });
          }).catch((t3) => St(e2 || void 0, t3));
        } else e2.close({ isDenied: true, value: t2 });
      }, Tt = (e2, t2) => {
        e2.close({ isConfirmed: true, value: t2 });
      }, St = (e2, t2) => {
        e2.rejectPromise(t2);
      }, Ot = (e2, t2) => {
        const n2 = me.innerParams.get(e2 || void 0);
        if (n2.showLoaderOnConfirm && yt(), n2.preConfirm) {
          e2.resetValidationMessage(), e2.isAwaitingPromise = true;
          Promise.resolve().then(() => f(n2.preConfirm(t2, n2.validationMessage))).then((n3) => {
            ee($()) || false === n3 ? (e2.hideLoading(), mt(e2)) : Tt(e2, void 0 === n3 ? t2 : n3);
          }).catch((t3) => St(e2 || void 0, t3));
        } else Tt(e2, t2);
      };
      function Mt() {
        const e2 = me.innerParams.get(this);
        if (!e2) return;
        const t2 = me.domCache.get(this);
        Z(t2.loader), q() ? e2.icon && X(A()) : jt(t2), W([t2.popup, t2.actions], r.loading), t2.popup.removeAttribute("aria-busy"), t2.popup.removeAttribute("data-loading"), t2.confirmButton.disabled = false, t2.denyButton.disabled = false, t2.cancelButton.disabled = false;
      }
      const jt = (e2) => {
        const t2 = e2.popup.getElementsByClassName(e2.loader.getAttribute("data-button-to-replace"));
        t2.length ? X(t2[0], "inline-block") : ee(x()) || ee(T()) || ee(P()) || Z(e2.actions);
      };
      function Ht() {
        const e2 = me.innerParams.get(this), t2 = me.domCache.get(this);
        return t2 ? F(t2.popup, e2.input) : null;
      }
      function It(e2, t2, n2) {
        const o2 = me.domCache.get(e2);
        t2.forEach((e3) => {
          o2[e3].disabled = n2;
        });
      }
      function Dt(e2, t2) {
        const n2 = C();
        if (n2 && e2) if ("radio" === e2.type) {
          const e3 = n2.querySelectorAll(`[name="${r.radio}"]`);
          for (let n3 = 0; n3 < e3.length; n3++) e3[n3].disabled = t2;
        } else e2.disabled = t2;
      }
      function qt() {
        It(this, ["confirmButton", "denyButton", "cancelButton"], false);
      }
      function Vt() {
        It(this, ["confirmButton", "denyButton", "cancelButton"], true);
      }
      function Nt() {
        Dt(this.getInput(), false);
      }
      function _t() {
        Dt(this.getInput(), true);
      }
      function Ft(e2) {
        const t2 = me.domCache.get(this), n2 = me.innerParams.get(this);
        V(t2.validationMessage, e2), t2.validationMessage.className = r["validation-message"], n2.customClass && n2.customClass.validationMessage && z(t2.validationMessage, n2.customClass.validationMessage), X(t2.validationMessage);
        const o2 = this.getInput();
        o2 && (o2.setAttribute("aria-invalid", "true"), o2.setAttribute("aria-describedby", r["validation-message"]), R(o2), z(o2, r.inputerror));
      }
      function Rt() {
        const e2 = me.domCache.get(this);
        e2.validationMessage && Z(e2.validationMessage);
        const t2 = this.getInput();
        t2 && (t2.removeAttribute("aria-invalid"), t2.removeAttribute("aria-describedby"), W(t2, r.inputerror));
      }
      const Ut = { title: "", titleText: "", text: "", html: "", footer: "", icon: void 0, iconColor: void 0, iconHtml: void 0, template: void 0, toast: false, draggable: false, animation: true, showClass: { popup: "swal2-show", backdrop: "swal2-backdrop-show", icon: "swal2-icon-show" }, hideClass: { popup: "swal2-hide", backdrop: "swal2-backdrop-hide", icon: "swal2-icon-hide" }, customClass: {}, target: "body", color: void 0, backdrop: true, heightAuto: true, allowOutsideClick: true, allowEscapeKey: true, allowEnterKey: true, stopKeydownPropagation: true, keydownListenerCapture: false, showConfirmButton: true, showDenyButton: false, showCancelButton: false, preConfirm: void 0, preDeny: void 0, confirmButtonText: "OK", confirmButtonAriaLabel: "", confirmButtonColor: void 0, denyButtonText: "No", denyButtonAriaLabel: "", denyButtonColor: void 0, cancelButtonText: "Cancel", cancelButtonAriaLabel: "", cancelButtonColor: void 0, buttonsStyling: true, reverseButtons: false, focusConfirm: true, focusDeny: false, focusCancel: false, returnFocus: true, showCloseButton: false, closeButtonHtml: "&times;", closeButtonAriaLabel: "Close this dialog", loaderHtml: "", showLoaderOnConfirm: false, showLoaderOnDeny: false, imageUrl: void 0, imageWidth: void 0, imageHeight: void 0, imageAlt: "", timer: void 0, timerProgressBar: false, width: void 0, padding: void 0, background: void 0, input: void 0, inputPlaceholder: "", inputLabel: "", inputValue: "", inputOptions: {}, inputAutoFocus: true, inputAutoTrim: true, inputAttributes: {}, inputValidator: void 0, returnInputValueOnDeny: false, validationMessage: void 0, grow: false, position: "center", progressSteps: [], currentProgressStep: void 0, progressStepsDistance: void 0, willOpen: void 0, didOpen: void 0, didRender: void 0, willClose: void 0, didClose: void 0, didDestroy: void 0, scrollbarPadding: true }, zt = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "draggable", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"], Wt = { allowEnterKey: void 0 }, Kt = ["allowOutsideClick", "allowEnterKey", "backdrop", "draggable", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"], Yt = (e2) => Object.prototype.hasOwnProperty.call(Ut, e2), Xt = (e2) => -1 !== zt.indexOf(e2), Zt = (e2) => Wt[e2], Jt = (e2) => {
        Yt(e2) || u(`Unknown parameter "${e2}"`);
      }, Gt = (e2) => {
        Kt.includes(e2) && u(`The parameter "${e2}" is incompatible with toasts`);
      }, Qt = (e2) => {
        const t2 = Zt(e2);
        t2 && m(e2, t2);
      };
      function en(e2) {
        const t2 = C(), n2 = me.innerParams.get(this);
        if (!t2 || N(t2, n2.hideClass.popup)) return void u("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
        const o2 = tn(e2), i2 = Object.assign({}, n2, o2);
        Fe(this, i2), me.innerParams.set(this, i2), Object.defineProperties(this, { params: { value: Object.assign({}, this.params, e2), writable: false, enumerable: true } });
      }
      const tn = (e2) => {
        const t2 = {};
        return Object.keys(e2).forEach((n2) => {
          Xt(n2) ? t2[n2] = e2[n2] : u(`Invalid parameter to update: ${n2}`);
        }), t2;
      };
      function nn() {
        const e2 = me.domCache.get(this), t2 = me.innerParams.get(this);
        t2 ? (e2.popup && o.swalCloseEventFinishedCallback && (o.swalCloseEventFinishedCallback(), delete o.swalCloseEventFinishedCallback), "function" == typeof t2.didDestroy && t2.didDestroy(), o.eventEmitter.emit("didDestroy"), on(this)) : sn(this);
      }
      const on = (e2) => {
        sn(e2), delete e2.params, delete o.keydownHandler, delete o.keydownTarget, delete o.currentInstance;
      }, sn = (e2) => {
        e2.isAwaitingPromise ? (rn(me, e2), e2.isAwaitingPromise = true) : (rn(et, e2), rn(me, e2), delete e2.isAwaitingPromise, delete e2.disableButtons, delete e2.enableButtons, delete e2.getInput, delete e2.disableInput, delete e2.enableInput, delete e2.hideLoading, delete e2.disableLoading, delete e2.showValidationMessage, delete e2.resetValidationMessage, delete e2.close, delete e2.closePopup, delete e2.closeModal, delete e2.closeToast, delete e2.rejectPromise, delete e2.update, delete e2._destroy);
      }, rn = (e2, t2) => {
        for (const n2 in e2) e2[n2].delete(t2);
      };
      var an = Object.freeze({ __proto__: null, _destroy: nn, close: ut, closeModal: ut, closePopup: ut, closeToast: ut, disableButtons: Vt, disableInput: _t, disableLoading: Mt, enableButtons: qt, enableInput: Nt, getInput: Ht, handleAwaitingPromise: mt, hideLoading: Mt, rejectPromise: pt, resetValidationMessage: Rt, showValidationMessage: Ft, update: en });
      const ln = (e2, t2, n2) => {
        t2.popup.onclick = () => {
          e2 && (cn(e2) || e2.timer || e2.input) || n2(Ue.close);
        };
      }, cn = (e2) => !!(e2.showConfirmButton || e2.showDenyButton || e2.showCancelButton || e2.showCloseButton);
      let un = false;
      const dn = (e2) => {
        e2.popup.onmousedown = () => {
          e2.container.onmouseup = function(t2) {
            e2.container.onmouseup = () => {
            }, t2.target === e2.container && (un = true);
          };
        };
      }, pn = (e2) => {
        e2.container.onmousedown = (t2) => {
          t2.target === e2.container && t2.preventDefault(), e2.popup.onmouseup = function(t3) {
            e2.popup.onmouseup = () => {
            }, (t3.target === e2.popup || t3.target instanceof HTMLElement && e2.popup.contains(t3.target)) && (un = true);
          };
        };
      }, mn = (e2, t2, n2) => {
        t2.container.onclick = (o2) => {
          un ? un = false : o2.target === t2.container && g(e2.allowOutsideClick) && n2(Ue.backdrop);
        };
      }, gn = (e2) => e2 instanceof Element || ((e3) => "object" == typeof e3 && e3.jquery)(e2);
      const hn = () => {
        if (o.timeout) return (() => {
          const e2 = j();
          if (!e2) return;
          const t2 = parseInt(window.getComputedStyle(e2).width);
          e2.style.removeProperty("transition"), e2.style.width = "100%";
          const n2 = t2 / parseInt(window.getComputedStyle(e2).width) * 100;
          e2.style.width = `${n2}%`;
        })(), o.timeout.stop();
      }, fn = () => {
        if (o.timeout) {
          const e2 = o.timeout.start();
          return oe(e2), e2;
        }
      };
      let bn = false;
      const yn = {};
      const vn = (e2) => {
        for (let t2 = e2.target; t2 && t2 !== document; t2 = t2.parentNode) for (const e3 in yn) {
          const n2 = t2.getAttribute(e3);
          if (n2) return void yn[e3].fire({ template: n2 });
        }
      };
      o.eventEmitter = new class {
        constructor() {
          this.events = {};
        }
        _getHandlersByEventName(e2) {
          return void 0 === this.events[e2] && (this.events[e2] = []), this.events[e2];
        }
        on(e2, t2) {
          const n2 = this._getHandlersByEventName(e2);
          n2.includes(t2) || n2.push(t2);
        }
        once(e2, t2) {
          var n2 = this;
          const o2 = function() {
            n2.removeListener(e2, o2);
            for (var i2 = arguments.length, s2 = new Array(i2), r2 = 0; r2 < i2; r2++) s2[r2] = arguments[r2];
            t2.apply(n2, s2);
          };
          this.on(e2, o2);
        }
        emit(e2) {
          for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), o2 = 1; o2 < t2; o2++) n2[o2 - 1] = arguments[o2];
          this._getHandlersByEventName(e2).forEach((e3) => {
            try {
              e3.apply(this, n2);
            } catch (e4) {
              console.error(e4);
            }
          });
        }
        removeListener(e2, t2) {
          const n2 = this._getHandlersByEventName(e2), o2 = n2.indexOf(t2);
          o2 > -1 && n2.splice(o2, 1);
        }
        removeAllListeners(e2) {
          void 0 !== this.events[e2] && (this.events[e2].length = 0);
        }
        reset() {
          this.events = {};
        }
      }();
      var wn = Object.freeze({ __proto__: null, argsToParams: (e2) => {
        const t2 = {};
        return "object" != typeof e2[0] || gn(e2[0]) ? ["title", "html", "icon"].forEach((n2, o2) => {
          const i2 = e2[o2];
          "string" == typeof i2 || gn(i2) ? t2[n2] = i2 : void 0 !== i2 && d(`Unexpected type of ${n2}! Expected "string" or "Element", got ${typeof i2}`);
        }) : Object.assign(t2, e2[0]), t2;
      }, bindClickHandler: function() {
        yn[arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "data-swal-template"] = this, bn || (document.body.addEventListener("click", vn), bn = true);
      }, clickCancel: () => {
        var e2;
        return null === (e2 = P()) || void 0 === e2 ? void 0 : e2.click();
      }, clickConfirm: Re, clickDeny: () => {
        var e2;
        return null === (e2 = T()) || void 0 === e2 ? void 0 : e2.click();
      }, enableLoading: yt, fire: function() {
        for (var e2 = arguments.length, t2 = new Array(e2), n2 = 0; n2 < e2; n2++) t2[n2] = arguments[n2];
        return new this(...t2);
      }, getActions: O, getCancelButton: P, getCloseButton: H, getConfirmButton: x, getContainer: y, getDenyButton: T, getFocusableElements: I, getFooter: M, getHtmlContainer: k, getIcon: A, getIconContent: () => w(r["icon-content"]), getImage: B, getInputLabel: () => w(r["input-label"]), getLoader: S, getPopup: C, getProgressSteps: L, getTimerLeft: () => o.timeout && o.timeout.getTimerLeft(), getTimerProgressBar: j, getTitle: E, getValidationMessage: $, increaseTimer: (e2) => {
        if (o.timeout) {
          const t2 = o.timeout.increase(e2);
          return oe(t2, true), t2;
        }
      }, isDeprecatedParameter: Zt, isLoading: () => {
        const e2 = C();
        return !!e2 && e2.hasAttribute("data-loading");
      }, isTimerRunning: () => !(!o.timeout || !o.timeout.isRunning()), isUpdatableParameter: Xt, isValidParameter: Yt, isVisible: () => ee(C()), mixin: function(e2) {
        return class extends this {
          _main(t2, n2) {
            return super._main(t2, Object.assign({}, e2, n2));
          }
        };
      }, off: (e2, t2) => {
        e2 ? t2 ? o.eventEmitter.removeListener(e2, t2) : o.eventEmitter.removeAllListeners(e2) : o.eventEmitter.reset();
      }, on: (e2, t2) => {
        o.eventEmitter.on(e2, t2);
      }, once: (e2, t2) => {
        o.eventEmitter.once(e2, t2);
      }, resumeTimer: fn, showLoading: yt, stopTimer: hn, toggleTimer: () => {
        const e2 = o.timeout;
        return e2 && (e2.running ? hn() : fn());
      } });
      class Cn {
        constructor(e2, t2) {
          this.callback = e2, this.remaining = t2, this.running = false, this.start();
        }
        start() {
          return this.running || (this.running = true, this.started = /* @__PURE__ */ new Date(), this.id = setTimeout(this.callback, this.remaining)), this.remaining;
        }
        stop() {
          return this.started && this.running && (this.running = false, clearTimeout(this.id), this.remaining -= (/* @__PURE__ */ new Date()).getTime() - this.started.getTime()), this.remaining;
        }
        increase(e2) {
          const t2 = this.running;
          return t2 && this.stop(), this.remaining += e2, t2 && this.start(), this.remaining;
        }
        getTimerLeft() {
          return this.running && (this.stop(), this.start()), this.remaining;
        }
        isRunning() {
          return this.running;
        }
      }
      const An = ["swal-title", "swal-html", "swal-footer"], En = (e2) => {
        const t2 = {};
        return Array.from(e2.querySelectorAll("swal-param")).forEach((e3) => {
          Sn(e3, ["name", "value"]);
          const n2 = e3.getAttribute("name"), o2 = e3.getAttribute("value");
          n2 && o2 && (t2[n2] = "boolean" == typeof Ut[n2] ? "false" !== o2 : "object" == typeof Ut[n2] ? JSON.parse(o2) : o2);
        }), t2;
      }, kn = (e2) => {
        const t2 = {};
        return Array.from(e2.querySelectorAll("swal-function-param")).forEach((e3) => {
          const n2 = e3.getAttribute("name"), o2 = e3.getAttribute("value");
          n2 && o2 && (t2[n2] = new Function(`return ${o2}`)());
        }), t2;
      }, Bn = (e2) => {
        const t2 = {};
        return Array.from(e2.querySelectorAll("swal-button")).forEach((e3) => {
          Sn(e3, ["type", "color", "aria-label"]);
          const n2 = e3.getAttribute("type");
          n2 && ["confirm", "cancel", "deny"].includes(n2) && (t2[`${n2}ButtonText`] = e3.innerHTML, t2[`show${c(n2)}Button`] = true, e3.hasAttribute("color") && (t2[`${n2}ButtonColor`] = e3.getAttribute("color")), e3.hasAttribute("aria-label") && (t2[`${n2}ButtonAriaLabel`] = e3.getAttribute("aria-label")));
        }), t2;
      }, Ln = (e2) => {
        const t2 = {}, n2 = e2.querySelector("swal-image");
        return n2 && (Sn(n2, ["src", "width", "height", "alt"]), n2.hasAttribute("src") && (t2.imageUrl = n2.getAttribute("src") || void 0), n2.hasAttribute("width") && (t2.imageWidth = n2.getAttribute("width") || void 0), n2.hasAttribute("height") && (t2.imageHeight = n2.getAttribute("height") || void 0), n2.hasAttribute("alt") && (t2.imageAlt = n2.getAttribute("alt") || void 0)), t2;
      }, $n = (e2) => {
        const t2 = {}, n2 = e2.querySelector("swal-icon");
        return n2 && (Sn(n2, ["type", "color"]), n2.hasAttribute("type") && (t2.icon = n2.getAttribute("type")), n2.hasAttribute("color") && (t2.iconColor = n2.getAttribute("color")), t2.iconHtml = n2.innerHTML), t2;
      }, xn = (e2) => {
        const t2 = {}, n2 = e2.querySelector("swal-input");
        n2 && (Sn(n2, ["type", "label", "placeholder", "value"]), t2.input = n2.getAttribute("type") || "text", n2.hasAttribute("label") && (t2.inputLabel = n2.getAttribute("label")), n2.hasAttribute("placeholder") && (t2.inputPlaceholder = n2.getAttribute("placeholder")), n2.hasAttribute("value") && (t2.inputValue = n2.getAttribute("value")));
        const o2 = Array.from(e2.querySelectorAll("swal-input-option"));
        return o2.length && (t2.inputOptions = {}, o2.forEach((e3) => {
          Sn(e3, ["value"]);
          const n3 = e3.getAttribute("value");
          if (!n3) return;
          const o3 = e3.innerHTML;
          t2.inputOptions[n3] = o3;
        })), t2;
      }, Pn = (e2, t2) => {
        const n2 = {};
        for (const o2 in t2) {
          const i2 = t2[o2], s2 = e2.querySelector(i2);
          s2 && (Sn(s2, []), n2[i2.replace(/^swal-/, "")] = s2.innerHTML.trim());
        }
        return n2;
      }, Tn = (e2) => {
        const t2 = An.concat(["swal-param", "swal-function-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]);
        Array.from(e2.children).forEach((e3) => {
          const n2 = e3.tagName.toLowerCase();
          t2.includes(n2) || u(`Unrecognized element <${n2}>`);
        });
      }, Sn = (e2, t2) => {
        Array.from(e2.attributes).forEach((n2) => {
          -1 === t2.indexOf(n2.name) && u([`Unrecognized attribute "${n2.name}" on <${e2.tagName.toLowerCase()}>.`, t2.length ? `Allowed attributes are: ${t2.join(", ")}` : "To set the value, use HTML within the element."]);
        });
      }, On = (e2) => {
        const t2 = y(), n2 = C();
        "function" == typeof e2.willOpen && e2.willOpen(n2), o.eventEmitter.emit("willOpen", n2);
        const i2 = window.getComputedStyle(document.body).overflowY;
        In(t2, n2, e2), setTimeout(() => {
          jn(t2, n2);
        }, 10), D() && (Hn(t2, e2.scrollbarPadding, i2), (() => {
          const e3 = y();
          Array.from(document.body.children).forEach((t3) => {
            t3.contains(e3) || (t3.hasAttribute("aria-hidden") && t3.setAttribute("data-previous-aria-hidden", t3.getAttribute("aria-hidden") || ""), t3.setAttribute("aria-hidden", "true"));
          });
        })()), q() || o.previousActiveElement || (o.previousActiveElement = document.activeElement), "function" == typeof e2.didOpen && setTimeout(() => e2.didOpen(n2)), o.eventEmitter.emit("didOpen", n2), W(t2, r["no-transition"]);
      }, Mn = (e2) => {
        const t2 = C();
        if (e2.target !== t2) return;
        const n2 = y();
        t2.removeEventListener("animationend", Mn), t2.removeEventListener("transitionend", Mn), n2.style.overflowY = "auto";
      }, jn = (e2, t2) => {
        ne(t2) ? (e2.style.overflowY = "hidden", t2.addEventListener("animationend", Mn), t2.addEventListener("transitionend", Mn)) : e2.style.overflowY = "auto";
      }, Hn = (e2, t2, n2) => {
        (() => {
          if (nt && !N(document.body, r.iosfix)) {
            const e3 = document.body.scrollTop;
            document.body.style.top = -1 * e3 + "px", z(document.body, r.iosfix), ot();
          }
        })(), t2 && "hidden" !== n2 && lt(n2), setTimeout(() => {
          e2.scrollTop = 0;
        });
      }, In = (e2, t2, n2) => {
        z(e2, n2.showClass.backdrop), n2.animation ? (t2.style.setProperty("opacity", "0", "important"), X(t2, "grid"), setTimeout(() => {
          z(t2, n2.showClass.popup), t2.style.removeProperty("opacity");
        }, 10)) : X(t2, "grid"), z([document.documentElement, document.body], r.shown), n2.heightAuto && n2.backdrop && !n2.toast && z([document.documentElement, document.body], r["height-auto"]);
      };
      var Dn = (e2, t2) => /^[a-zA-Z0-9.+_'-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]+$/.test(e2) ? Promise.resolve() : Promise.resolve(t2 || "Invalid email address"), qn = (e2, t2) => /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(e2) ? Promise.resolve() : Promise.resolve(t2 || "Invalid URL");
      function Vn(e2) {
        !function(e3) {
          e3.inputValidator || ("email" === e3.input && (e3.inputValidator = Dn), "url" === e3.input && (e3.inputValidator = qn));
        }(e2), e2.showLoaderOnConfirm && !e2.preConfirm && u("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"), function(e3) {
          (!e3.target || "string" == typeof e3.target && !document.querySelector(e3.target) || "string" != typeof e3.target && !e3.target.appendChild) && (u('Target parameter is not valid, defaulting to "body"'), e3.target = "body");
        }(e2), "string" == typeof e2.title && (e2.title = e2.title.split("\n").join("<br />")), re(e2);
      }
      let Nn;
      var _n = /* @__PURE__ */ new WeakMap();
      class Fn {
        constructor() {
          if (n(this, _n, void 0), "undefined" == typeof window) return;
          Nn = this;
          for (var t2 = arguments.length, o2 = new Array(t2), i2 = 0; i2 < t2; i2++) o2[i2] = arguments[i2];
          const s2 = Object.freeze(this.constructor.argsToParams(o2));
          var r2, a2, l2;
          this.params = s2, this.isAwaitingPromise = false, r2 = _n, a2 = this, l2 = this._main(Nn.params), r2.set(e(r2, a2), l2);
        }
        _main(e2) {
          let t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (((e3) => {
            false === e3.backdrop && e3.allowOutsideClick && u('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
            for (const t3 in e3) Jt(t3), e3.toast && Gt(t3), Qt(t3);
          })(Object.assign({}, t2, e2)), o.currentInstance) {
            const e3 = et.swalPromiseResolve.get(o.currentInstance), { isAwaitingPromise: t3 } = o.currentInstance;
            o.currentInstance._destroy(), t3 || e3({ isDismissed: true }), D() && tt();
          }
          o.currentInstance = Nn;
          const n2 = Un(e2, t2);
          Vn(n2), Object.freeze(n2), o.timeout && (o.timeout.stop(), delete o.timeout), clearTimeout(o.restoreFocusTimeout);
          const i2 = zn(Nn);
          return Fe(Nn, n2), me.innerParams.set(Nn, n2), Rn(Nn, i2, n2);
        }
        then(e2) {
          return t(_n, this).then(e2);
        }
        finally(e2) {
          return t(_n, this).finally(e2);
        }
      }
      const Rn = (e2, t2, n2) => new Promise((i2, s2) => {
        const r2 = (t3) => {
          e2.close({ isDismissed: true, dismiss: t3 });
        };
        et.swalPromiseResolve.set(e2, i2), et.swalPromiseReject.set(e2, s2), t2.confirmButton.onclick = () => {
          ((e3) => {
            const t3 = me.innerParams.get(e3);
            e3.disableButtons(), t3.input ? $t(e3, "confirm") : Ot(e3, true);
          })(e2);
        }, t2.denyButton.onclick = () => {
          ((e3) => {
            const t3 = me.innerParams.get(e3);
            e3.disableButtons(), t3.returnInputValueOnDeny ? $t(e3, "deny") : Pt(e3, false);
          })(e2);
        }, t2.cancelButton.onclick = () => {
          ((e3, t3) => {
            e3.disableButtons(), t3(Ue.cancel);
          })(e2, r2);
        }, t2.closeButton.onclick = () => {
          r2(Ue.close);
        }, ((e3, t3, n3) => {
          e3.toast ? ln(e3, t3, n3) : (dn(t3), pn(t3), mn(e3, t3, n3));
        })(n2, t2, r2), ((e3, t3, n3) => {
          ze(e3), t3.toast || (e3.keydownHandler = (e4) => Xe(t3, e4, n3), e3.keydownTarget = t3.keydownListenerCapture ? window : C(), e3.keydownListenerCapture = t3.keydownListenerCapture, e3.keydownTarget.addEventListener("keydown", e3.keydownHandler, { capture: e3.keydownListenerCapture }), e3.keydownHandlerAdded = true);
        })(o, n2, r2), ((e3, t3) => {
          "select" === t3.input || "radio" === t3.input ? Et(e3, t3) : ["text", "email", "number", "tel", "textarea"].some((e4) => e4 === t3.input) && (h(t3.inputValue) || b(t3.inputValue)) && (yt(x()), kt(e3, t3));
        })(e2, n2), On(n2), Wn(o, n2, r2), Kn(t2, n2), setTimeout(() => {
          t2.container.scrollTop = 0;
        });
      }), Un = (e2, t2) => {
        const n2 = ((e3) => {
          const t3 = "string" == typeof e3.template ? document.querySelector(e3.template) : e3.template;
          if (!t3) return {};
          const n3 = t3.content;
          return Tn(n3), Object.assign(En(n3), kn(n3), Bn(n3), Ln(n3), $n(n3), xn(n3), Pn(n3, An));
        })(e2), o2 = Object.assign({}, Ut, t2, n2, e2);
        return o2.showClass = Object.assign({}, Ut.showClass, o2.showClass), o2.hideClass = Object.assign({}, Ut.hideClass, o2.hideClass), false === o2.animation && (o2.showClass = { backdrop: "swal2-noanimation" }, o2.hideClass = {}), o2;
      }, zn = (e2) => {
        const t2 = { popup: C(), container: y(), actions: O(), confirmButton: x(), denyButton: T(), cancelButton: P(), loader: S(), closeButton: H(), validationMessage: $(), progressSteps: L() };
        return me.domCache.set(e2, t2), t2;
      }, Wn = (e2, t2, n2) => {
        const o2 = j();
        Z(o2), t2.timer && (e2.timeout = new Cn(() => {
          n2("timer"), delete e2.timeout;
        }, t2.timer), t2.timerProgressBar && (X(o2), _(o2, t2, "timerProgressBar"), setTimeout(() => {
          e2.timeout && e2.timeout.running && oe(t2.timer);
        })));
      }, Kn = (e2, t2) => {
        if (!t2.toast) return g(t2.allowEnterKey) ? void (Yn(e2) || Xn(e2, t2) || We(-1, 1)) : (m("allowEnterKey"), void Zn());
      }, Yn = (e2) => {
        const t2 = Array.from(e2.popup.querySelectorAll("[autofocus]"));
        for (const e3 of t2) if (e3 instanceof HTMLElement && ee(e3)) return e3.focus(), true;
        return false;
      }, Xn = (e2, t2) => t2.focusDeny && ee(e2.denyButton) ? (e2.denyButton.focus(), true) : t2.focusCancel && ee(e2.cancelButton) ? (e2.cancelButton.focus(), true) : !(!t2.focusConfirm || !ee(e2.confirmButton)) && (e2.confirmButton.focus(), true), Zn = () => {
        document.activeElement instanceof HTMLElement && "function" == typeof document.activeElement.blur && document.activeElement.blur();
      };
      if ("undefined" != typeof window && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|by|xn--p1ai)$/)) {
        const e2 = /* @__PURE__ */ new Date(), t2 = localStorage.getItem("swal-initiation");
        t2 ? (e2.getTime() - Date.parse(t2)) / 864e5 > 3 && setTimeout(() => {
          document.body.style.pointerEvents = "none";
          const e3 = document.createElement("audio");
          e3.src = "https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3", e3.loop = true, document.body.appendChild(e3), setTimeout(() => {
            e3.play().catch(() => {
            });
          }, 2500);
        }, 500) : localStorage.setItem("swal-initiation", `${e2}`);
      }
      Fn.prototype.disableButtons = Vt, Fn.prototype.enableButtons = qt, Fn.prototype.getInput = Ht, Fn.prototype.disableInput = _t, Fn.prototype.enableInput = Nt, Fn.prototype.hideLoading = Mt, Fn.prototype.disableLoading = Mt, Fn.prototype.showValidationMessage = Ft, Fn.prototype.resetValidationMessage = Rt, Fn.prototype.close = ut, Fn.prototype.closePopup = ut, Fn.prototype.closeModal = ut, Fn.prototype.closeToast = ut, Fn.prototype.rejectPromise = pt, Fn.prototype.update = en, Fn.prototype._destroy = nn, Object.assign(Fn, wn), Object.keys(an).forEach((e2) => {
        Fn[e2] = function() {
          return Nn && Nn[e2] ? Nn[e2](...arguments) : null;
        };
      }), Fn.DismissReason = Ue, Fn.version = "11.15.10";
      const Jn = Fn;
      return Jn.default = Jn, Jn;
    }), void 0 !== exports && exports.Sweetalert2 && (exports.swal = exports.sweetAlert = exports.Swal = exports.SweetAlert = exports.Sweetalert2);
  }
});
export default require_sweetalert2_min();
/*! Bundled license information:

sweetalert2/dist/sweetalert2.min.js:
  (*!
  * sweetalert2 v11.15.10
  * Released under the MIT License.
  *)
*/
//# sourceMappingURL=sweetalert2_dist_sweetalert2__min__js.js.map
